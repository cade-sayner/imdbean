name: Flyway Migrations

on:
  push:
    branches:
      - main  # Or any branch you want to trigger on

jobs:
  flyway-migrate:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Flyway
      - name: Set up Flyway
        uses: flyway/flyway-action@v2
        with:
          flywayVersion: '9.8'  # Specify the Flyway version you want

      # Step 3: Set up environment variables for RDS connection
      - name: Set up environment variables
        run: |
          echo "DB_HOST=${{ secrets.DB_HOST }}" >> $GITHUB_ENV
          echo "DB_PORT=${{ secrets.DB_PORT }}" >> $GITHUB_ENV
          echo "DB_NAME=${{ secrets.DB_NAME }}" >> $GITHUB_ENV
          echo "DB_USERNAME=${{ secrets.DB_USERNAME }}" >> $GITHUB_ENV
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> $GITHUB_ENV

      # Step 4: Run Flyway Migrations for MSSQL
      - name: Run Flyway Migrations
        run: |
          flyway -url=jdbc:sqlserver://${{ env.DB_HOST }}:${{ env.DB_PORT }};databaseName=${{ env.DB_NAME }} \
                 -user=${{ env.DB_USERNAME }} -password=${{ env.DB_PASSWORD }} migrate
        env:
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_PORT: ${{ secrets.DB_PORT }}
          DB_NAME: ${{ secrets.DB_NAME }}
          DB_USERNAME: ${{ secrets.DB_USERNAME }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}

      # Optional: Step to confirm migration success
      - name: Confirm migration success
        run: |
          flyway -url=jdbc:sqlserver://${{ env.DB_HOST }}:${{ env.DB_PORT }};databaseName=${{ env.DB_NAME }} \
                 -user=${{ env.DB_USERNAME }} -password=${{ env.DB_PASSWORD }} info
